"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import collections.abc
import grpc
import grpc.aio
import person_pb2
import typing

_T = typing.TypeVar('_T')

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta):
    ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore
    ...

class PersonServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    PersonGetHandler: grpc.UnaryUnaryMultiCallable[
        person_pb2.PersonData,
        person_pb2.PersonWithId,
    ]
    PersonCreateHandler: grpc.UnaryUnaryMultiCallable[
        person_pb2.PersonData,
        person_pb2.PersonWithId,
    ]
    PersonGetByIdHandler: grpc.UnaryUnaryMultiCallable[
        person_pb2.PersonId,
        person_pb2.PersonWithId,
    ]

class PersonServiceAsyncStub:
    PersonGetHandler: grpc.aio.UnaryUnaryMultiCallable[
        person_pb2.PersonData,
        person_pb2.PersonWithId,
    ]
    PersonCreateHandler: grpc.aio.UnaryUnaryMultiCallable[
        person_pb2.PersonData,
        person_pb2.PersonWithId,
    ]
    PersonGetByIdHandler: grpc.aio.UnaryUnaryMultiCallable[
        person_pb2.PersonId,
        person_pb2.PersonWithId,
    ]

class PersonServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def PersonGetHandler(
        self,
        request: person_pb2.PersonData,
        context: _ServicerContext,
    ) -> typing.Union[person_pb2.PersonWithId, collections.abc.Awaitable[person_pb2.PersonWithId]]: ...
    @abc.abstractmethod
    def PersonCreateHandler(
        self,
        request: person_pb2.PersonData,
        context: _ServicerContext,
    ) -> typing.Union[person_pb2.PersonWithId, collections.abc.Awaitable[person_pb2.PersonWithId]]: ...
    @abc.abstractmethod
    def PersonGetByIdHandler(
        self,
        request: person_pb2.PersonId,
        context: _ServicerContext,
    ) -> typing.Union[person_pb2.PersonWithId, collections.abc.Awaitable[person_pb2.PersonWithId]]: ...

def add_PersonServiceServicer_to_server(servicer: PersonServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
